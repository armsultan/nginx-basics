user  nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log notice;
pid        /var/run/nginx.pid;

# Load Modules
# GeoIP2 - Create variables based on the client IP address, using the precompiled MaxMind GeoIP2 databases.
load_module modules/ngx_http_geoip2_module.so;
load_module modules/ngx_stream_geoip2_module.so;
# Modsecurity WAF
#load_module modules/ngx_http_modsecurity_module.so;
# NGINX Javascript
#load_module /etc/nginx/modules/ngx_http_js_module.so;

events {
    worker_connections  1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for" "$request_id"';
    # Default
    # access_log  /var/log/nginx/access.log  main; 

    # Custom Access logs formats
    include /etc/nginx/includes/log_formats/*.conf;    

    # NGINX Plus Additional NGINX Metrics
    access_log  /var/log/nginx/access.log  main_ext; 

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

    #gzip  on;

    # HTTP/S traffic
    include /etc/nginx/conf.d/*.conf;    
}


# TCP/UDP proxy and load balancing block
#
#stream {
    # Example configuration for TCP load balancing

    #upstream stream_backend {
    #    zone tcp_servers 64k;
    #    server backend1.example.com:12345;
    #    server backend2.example.com:12345;
    #}

    #server {
    #    listen 12345;
    #    status_zone tcp_server;
    #    proxy_pass stream_backend;
    #}
#}

# vim: syntax=nginx